// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a sample API for the REST-based MOLOCO microservice development.",
    "title": "MOLOCO Hello-Rest Sample API",
    "version": "1.0.0"
  },
  "host": "api-first-01.example.com",
  "paths": {
    "/": {
      "get": {
        "description": "Check the health of the api-first-01 service. This is critical to make the healthy GKE workload.",
        "tags": [
          "Health"
        ],
        "summary": "Check the health of the service.",
        "operationId": "v1_health_check",
        "responses": {
          "200": {
            "description": "The API is working fine.",
            "schema": {
              "$ref": "#/definitions/healthCheckResponse"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/hellos": {
      "get": {
        "description": "List Hellos which are in the system.",
        "tags": [
          "Hello"
        ],
        "summary": "List Hellos.",
        "operationId": "v1_list_hellos",
        "parameters": [
          {
            "type": "number",
            "format": "int32",
            "description": "The number of hellos to retrieve.",
            "name": "count",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The list of hellos.",
            "schema": {
              "$ref": "#/definitions/listHellosResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Create a new hello.",
        "tags": [
          "Hello"
        ],
        "summary": "Create a Hello.",
        "operationId": "v1_create_hello",
        "parameters": [
          {
            "description": "a request to create a hello.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createHelloRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The hello is successfully created.",
            "schema": {
              "$ref": "#/definitions/createHelloResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/hellos/{hello_id}": {
      "get": {
        "description": "Read a specific hello with its ID.",
        "tags": [
          "Hello"
        ],
        "summary": "Read a hello.",
        "operationId": "v1_read_hello",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the hello.",
            "name": "hello_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The hello is successfully read.",
            "schema": {
              "$ref": "#/definitions/readHelloResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found - no such user.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/hellos/{hello_id}/status": {
      "get": {
        "description": "Get the current status of a specific hello.",
        "tags": [
          "Hello"
        ],
        "summary": "Get the status of a hello.",
        "operationId": "v1_read_hello_status",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the hello.",
            "name": "hello_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the given hello.",
            "schema": {
              "$ref": "#/definitions/readHelloStatusResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "createHelloRequest": {
      "description": "A request to create a hello.",
      "type": "object",
      "required": [
        "hello"
      ],
      "properties": {
        "hello": {
          "$ref": "#/definitions/hello"
        }
      }
    },
    "createHelloResponse": {
      "description": "A response to the request to create a hello.",
      "type": "object",
      "required": [
        "hello"
      ],
      "properties": {
        "hello": {
          "$ref": "#/definitions/hello"
        }
      }
    },
    "error": {
      "description": "Error response with detailed reason.",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "The error status code.",
          "type": "integer"
        },
        "message": {
          "description": "More detailed reason about why the error was returned.",
          "type": "string"
        }
      }
    },
    "healthCheckResponse": {
      "description": "A response to a health check request.",
      "type": "object",
      "required": [
        "healthy"
      ],
      "properties": {
        "healthy": {
          "description": "Indicates whether the server is healthy or not.",
          "type": "boolean"
        }
      }
    },
    "hello": {
      "description": "A Hello.",
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "id": {
          "description": "The hello ID.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The hello message.",
          "type": "string"
        }
      }
    },
    "helloStatus": {
      "description": "A Hello Status.",
      "type": "object",
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "description": "the current status of the given hello.",
          "type": "boolean"
        }
      }
    },
    "listHellosResponse": {
      "description": "A response to the request to list hellos.",
      "type": "object",
      "required": [
        "hellos"
      ],
      "properties": {
        "hellos": {
          "description": "The hellos.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hello"
          }
        }
      }
    },
    "readHelloResponse": {
      "description": "A response to the request to read a hello.",
      "type": "object",
      "required": [
        "hello"
      ],
      "properties": {
        "hello": {
          "$ref": "#/definitions/hello"
        }
      }
    },
    "readHelloStatusResponse": {
      "description": "A response to a request to read the hello status.",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/helloStatus"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "x-google-backend": {
    "address": "https://api-first-01.example.com"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a sample API for the REST-based MOLOCO microservice development.",
    "title": "MOLOCO Hello-Rest Sample API",
    "version": "1.0.0"
  },
  "host": "api-first-01.example.com",
  "paths": {
    "/": {
      "get": {
        "description": "Check the health of the api-first-01 service. This is critical to make the healthy GKE workload.",
        "tags": [
          "Health"
        ],
        "summary": "Check the health of the service.",
        "operationId": "v1_health_check",
        "responses": {
          "200": {
            "description": "The API is working fine.",
            "schema": {
              "$ref": "#/definitions/healthCheckResponse"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/hellos": {
      "get": {
        "description": "List Hellos which are in the system.",
        "tags": [
          "Hello"
        ],
        "summary": "List Hellos.",
        "operationId": "v1_list_hellos",
        "parameters": [
          {
            "type": "number",
            "format": "int32",
            "description": "The number of hellos to retrieve.",
            "name": "count",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The list of hellos.",
            "schema": {
              "$ref": "#/definitions/listHellosResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Create a new hello.",
        "tags": [
          "Hello"
        ],
        "summary": "Create a Hello.",
        "operationId": "v1_create_hello",
        "parameters": [
          {
            "description": "a request to create a hello.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createHelloRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The hello is successfully created.",
            "schema": {
              "$ref": "#/definitions/createHelloResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/hellos/{hello_id}": {
      "get": {
        "description": "Read a specific hello with its ID.",
        "tags": [
          "Hello"
        ],
        "summary": "Read a hello.",
        "operationId": "v1_read_hello",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the hello.",
            "name": "hello_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The hello is successfully read.",
            "schema": {
              "$ref": "#/definitions/readHelloResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found - no such user.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/hellos/{hello_id}/status": {
      "get": {
        "description": "Get the current status of a specific hello.",
        "tags": [
          "Hello"
        ],
        "summary": "Get the status of a hello.",
        "operationId": "v1_read_hello_status",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the hello.",
            "name": "hello_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the given hello.",
            "schema": {
              "$ref": "#/definitions/readHelloStatusResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "createHelloRequest": {
      "description": "A request to create a hello.",
      "type": "object",
      "required": [
        "hello"
      ],
      "properties": {
        "hello": {
          "$ref": "#/definitions/hello"
        }
      }
    },
    "createHelloResponse": {
      "description": "A response to the request to create a hello.",
      "type": "object",
      "required": [
        "hello"
      ],
      "properties": {
        "hello": {
          "$ref": "#/definitions/hello"
        }
      }
    },
    "error": {
      "description": "Error response with detailed reason.",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "The error status code.",
          "type": "integer"
        },
        "message": {
          "description": "More detailed reason about why the error was returned.",
          "type": "string"
        }
      }
    },
    "healthCheckResponse": {
      "description": "A response to a health check request.",
      "type": "object",
      "required": [
        "healthy"
      ],
      "properties": {
        "healthy": {
          "description": "Indicates whether the server is healthy or not.",
          "type": "boolean"
        }
      }
    },
    "hello": {
      "description": "A Hello.",
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "id": {
          "description": "The hello ID.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The hello message.",
          "type": "string"
        }
      }
    },
    "helloStatus": {
      "description": "A Hello Status.",
      "type": "object",
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "description": "the current status of the given hello.",
          "type": "boolean"
        }
      }
    },
    "listHellosResponse": {
      "description": "A response to the request to list hellos.",
      "type": "object",
      "required": [
        "hellos"
      ],
      "properties": {
        "hellos": {
          "description": "The hellos.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hello"
          }
        }
      }
    },
    "readHelloResponse": {
      "description": "A response to the request to read a hello.",
      "type": "object",
      "required": [
        "hello"
      ],
      "properties": {
        "hello": {
          "$ref": "#/definitions/hello"
        }
      }
    },
    "readHelloStatusResponse": {
      "description": "A response to a request to read the hello status.",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/helloStatus"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "x-google-backend": {
    "address": "https://api-first-01.example.com"
  }
}`))
}
